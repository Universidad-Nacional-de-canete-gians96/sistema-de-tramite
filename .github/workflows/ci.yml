name: CI Pipeline

on:
  push:
    branches: [ "dev", "feature/**" ]
  pull_request:
    branches: [ "dev" ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
      - name: üì• Clonar repositorio
        uses: actions/checkout@v3

      - name: üêò Validar sintaxis PHP
        run: |
          find . -name "*.php" -exec php -l {} \;

      - name: üê≥ Construir contenedores Docker
        run: |
          docker compose up -d --build

      - name: üåê Verificar aplicaci√≥n web (http://localhost:8080)
        run: |
          echo "Esperando a que la app responda en el puerto 8080..."
          for i in {1..10}; do
            if curl --silent http://localhost:8080 > /dev/null; then
              echo "‚úÖ Aplicaci√≥n web activa"
              exit 0
            fi
            echo "‚åõ Esperando..."
            sleep 5
          done
          echo "‚ùå No se pudo conectar a http://localhost:8080"
          exit 1

      - name: üåê Verificar phpMyAdmin (http://localhost:8081)
        run: |
          echo "Esperando a que phpMyAdmin responda en el puerto 8081..."
          for i in {1..10}; do
            if curl --silent http://localhost:8081 > /dev/null; then
              echo "‚úÖ phpMyAdmin activo"
              exit 0
            fi
            echo "‚åõ Esperando..."
            sleep 5
          done
          echo "‚ùå No se pudo conectar a http://localhost:8081"
          exit 1

      - name: üõ¢ Verificar conexi√≥n a MySQL desde el contenedor web
        run: |
          docker compose exec -T web bash -c "apt-get update && apt-get install -y default-mysql-client"
          docker compose exec -T web bash -c 'mysql -h db -uadmin -padmin -e "SHOW DATABASES;" | grep sis_tramite'

      - name: üßπ Apagar contenedores
        if: always()
        run: docker compose down -v
